on: push
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_mode: [Release, Debug]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Get Conan
        run: |
          pip install -U wheel setuptools
          pip install -U conan
      - name: Fix Path on Ubuntu
        if: contains(matrix.os, 'ubuntu')
        run: echo "::add-path::/home/runner/.local/bin"

      - name: Create Conan Profile
        run: conan profile new default --detect

      - name: Set C++11 ABI on Linux
        if: contains(matrix.os, 'ubuntu')
        run: conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: Install Clang for C++20 compiler on Linux
        run: |
          if: contains(matrix.os, 'ubuntu')
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          ./llvm.sh
          sed -i 's/"8", "9", "10"\]/"8", "9", "10", "11", "12"\]/g' ~/.conan/settings.yml

      - name: Generate (Linux only)
        if: contains(matrix.os, 'ubuntu')
        run: CC=clang-11 CXX=clang++11 cmake . -DCMAKE_BUILD_TYPE=${{ matrix.build_mode }}
      - name: Generate
        if: contains(matrix.os , 'macos') || contains(matrix.os, 'windows')
        run: cmake . -DCMAKE_BUILD_TYPE=${{ matrix.build_mode }}

      - name: Build
        run: cmake --build . --config ${{ matrix.build_mode }}
